load("~/.RData")
getwd()
dir()
library(readr)
library(readr)
install.packages("Readr")
install.packages("readr")
library(readr)
setwd("~/")
library(readr)
equipos <- read_csv("data/equipo_clasificaciones.csv")
install.packages("tzdb")
library(tzdb)
equipos <- read_csv("data/equipo_clasificaciones.csv")
equipos <- read_csv("C:/Users/luis_/AppData/Local/R/win-library/4.2/readr/extdata/mtcars.csv")
file.exists("LuisProy")
file.exists("LuisProj")
file.exists("C:\Users\luis_\OneDrive - Universidad Central del Ecuador\Carrera Medicina\CATALINA RESEARCH\LuisProy")
setwd()
setwd(Documents)
setwd(R)
setwd(Luis)
setwd("~/")
file.exists("R")
file.exists("OneNote Notebooks")
file.exists("Home")
setwd("Home")
setwd("C:\Users\luis_\OneDrive - Universidad Central del Ecuador\Carrera Medicina\CATALINA RESEARCH\LuisProy")
setwd("C:/Users/luis_/OneDrive - Universidad Central del Ecuador/Carrera Medicina/CATALINA RESEARCH/LuisProy")
file.exists("LuisProy")
getwd()
if(!file.exists("data")){}
if(!file.exists("data")){
dir.create("data")
}
source("~/.active-rstudio-document")
#Raw data | Conjunto de datos ordenados | Libro de codigo | Script con paso a paso
fileurl <- https://egisdata.baltimorecity.gov/egis/rest/services/CityView/CCTV_Locations/MapServer/0
fileurl <- "https://egisdata.baltimorecity.gov/egis/rest/services/CityView/CCTV_Locations/MapServer/0"
download.file(fileurl, destfile:"C:/Users/luis_/OneDrive - Universidad Central del Ecuador/Carrera Medicina/CATALINA RESEARCH/LuisProy/data/cameras.csv", method="curl")
download.file(fileurl, destfile:"C:/Users/luis_/OneDrive - Universidad Central del Ecuador/Carrera Medicina/CATALINA RESEARCH/LuisProy/data", method="curl")
download.file(fileurl, destfile:"LuisProy", method="curl")
download.file(fileurl, destfile:"./data/cameras.csv", method="curl")
download.file(fileurl, destfile="./data/cameras.csv", method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
library(readr)
read_csv(cameras.csv)
read_csv("./data/cameras.csv")
read_csv("./data/cameras.csv")
read_csv("./data/cameras.csv", header=T, quote = "")
read_csv("./data/cameras.csv",quote = "")
read_csv("./data/cameras.csv",quote = "", skip = 9, n_max = 1)
read_csv("./data/cameras.csv",quote = "", col_names = T,skip = 9, n_max = 1)
read_csv("./data/cameras.csv",quote = "", col_types =  = T,skip = 9, n_max = 1)
read_csv("./data/cameras.csv",quote = "", col_types = T,skip = 9, n_max = 1)
install.packages("xlsx")
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(xlsx)
detach("package:xlsx", unload = TRUE)
install.packages(c("cli", "dplyr"))
install.packages(c("cli", "dplyr"))
install.packages("cli")
library(xlsx)
library(xlsx)
fun(libname, pkgname)
fun(xlsx)
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("XML")
library(XML)
fileurl<- "https://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileurl, useInternal=T)
doc <- xmlTreeParse(fileurl, useInternalNodes = =T)
doc <- xmlTreeParse(fileurl, useInternalNodes = T)
fileurl=http://www.w3schools.com/xml/simple.xml
fileurl="http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileurl, useInternalNodes = T)
doc <- xmlTreeParse(fileurl, useInternal = T)
download.file(fileUrl, destfile = "./data/simple.xml")
doc <- xmlTreeParse("./data/simple.xml", useInternalNodes = TRUE)
download.file(fileUrl, destfile = "./data/food.xml")
download.file(fileurl, destfile = "./data/food.xml")
doc = xmlTreeParse(file = "./data/food.xml", useInternalNodes = TRUE)
rootNode = xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
<Greeting> Hello, world </Greeting>
<Greeting> Hello, world </Greeting>
<Greeting> Hello, world </Greeting>
</section>
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//price", xmlValue)
fileurl="https://www.espn.com.mx/futbol-americano/nfl/equipo/_/nombre/bal/baltimore-ravens"
doc=htmlTreeParse(fileurl, useInternalNodes = T)
doc=htmlTreeParse(fileurl)
fileurl="https://www.espn.com/soccer/league/_/name/ecu.1"
doc=htmlTreeParse(fileurl, useInternalNodes = TRUE)
doc = htmlTreeParse(fileurl, useInternalNodes = TRUE)
scores = xpathSApply("//li[@class='score']", xmlValue)
scores = xpathSApply(("//li[@class='score']", xmlValue))
scores = xpathSApply(("//li[@class=score]", xmlValue))
scores = xpathSApply(doc,("//li[@class='score']", xmlValue))
scores = xpathSApply(doc,("//li[@class='score']",xmlValue))
scores = xpathSApply(doc,"//li[@class='score']",xmlValue)
teams = xpathSApply(doc,"//li[@class='team-names']",xmlValue)
scores
teams
fileurl="http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
scores
doc=htmlTreeParse(fileurl, useInternalNodes = T)
doc = htmlTreeParse(fileurl, useInternalNodes = TRUE)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
install.packages(curl)
install.packages("curl")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
jsonData$owner$login
myjson<- toJSON
myjson<- toJSON(iris, pretty = T)
cat(myjson)
iris2<- fromJSON(myjson)
head(iris2)
library(curl)
detach("package:XML", unload = TRUE)
library(XML)
library(htmltools)
doc=htmlTreeParse(fileurl, useInternalNodes = T)
library(xlsx)
install.packages("fun")
library(xlsx)
fun(libname, pkgname)
library(fun)
java -d64 -version
fileurl<- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
fileurl<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getwd()
download.file(fileurl, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/ SurveyUSA.csv", method="curl")
list.files("./Pruebas Obtencion y limpieza de datos/Sem 1/ SurveyUSA.csv")
SurveyUSA <- read.csv(SurveyUSA.csv)
library(readr)
X_SurveyUSA <- read_csv("Pruebas Obtencion y limpieza de datos/Sem 1/ SurveyUSA.csv")
View(X_SurveyUSA)
X_SurveyUSA$VAL
X_SurveyUSA$VAL$(>=1000000)
X_SurveyUSA$VAL[>=10000000]
X_SurveyUSA$VAL(24)
X_SurveyUSA$VAL[24]
X_SurveyUSA(,VAL[24])
X_SurveyUSA(,VAL)
X_SurveyUSA(1,VAL)
X_SurveyUSA$VAL{if}
X_SurveyUSA$VAL{if =24}
X_SurveyUSA$VAL(24)
X_SurveyUSA(val)
X_SurveyUSA$VAL
X_SurveyUSA$VAL$23
X_SurveyUSA$VAL[24]
X_SurveyUSA$VAL[15]
X_SurveyUSA$VAL[=15]
X_SurveyUSA$VAL(=15)
X_SurveyUSA$VAL=15
B=X_SurveyUSA$VAL
B$24
?na.action()
na.action(B)
na.action(B$24)
na.action(B#4)
2
gzfile(C:/Users/luis_/Downloads/Practicas_R.gzf)
gzfile(C:\Users\luis_\DownloadsPracticas_R.gzf)
gzfile(C:\Users\luis_\Downloads\Practicas_R.gzf)
gzfile(C:/Users\luis_\Downloads\Practicas_R.gzf)
gzfile(C/Users\luis_\Downloads\Practicas_R.gzf)
gzfile(C://Users\luis_\Downloads\Practicas_R.gzf)
gzfile(C:\\Users\luis_\Downloads\Practicas_R.gzf)
install.packages("tidyverse")
library(tidyverse)
library(datasets)
X_SurveyUSA %>% filter(VAL>23)
X_SurveyUSA %>% filter(VAL > 23)
X_SurveyUSA$VAL
View(X_SurveyUSA)
X_SurveyUSA <- read.csv(./Pruebas Obtencion y limpieza de datos/Sem 1/SurveyUSA.csv)
SurveyUSA <- read.csv(SurveyUSA.csv)
X_SurveyUSA <- read_csv("Pruebas Obtencion y limpieza de datos/Sem 1/ SurveyUSA.csv")
X_SurveyUSA %>% filter(VAL > 23)
download.file( https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
download.file( https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", method="curl")
urlfile <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(urlfile, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", method="curl")
download.file(urlfile, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
urlfile <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(urlfile, destfile="./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
library(xlsx)
require(xlsx)
library(rJava)
if(Sys.getenv("JAVA_HOME")!=""){
Sys.setenv(JAVA_HOME="")
}
library(rJava)
detach("package:rJava", unload = TRUE)
system("java -version")
install.packages("openxlsx")
library(openxlsx)
LXLSX <-read.xlsx("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", rows = 18-23, cols = 7-15)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", rows = 18-23, cols = 7-15)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", rows = 18-23, cols = 7-15)
LXLSX <-read.xlsx("wd./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", rows = 18-23, cols = 7-15)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx"
row(Datos, nrow(18-23))
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx", nrow(18-23), ncol(7-15))
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
Datos <- read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
X <- read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
openxlsx
X <- read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx")
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 18-23, cols = 7-15)
Datos
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = "18-23", cols ="7-15")
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 18-23, cols = 7-15)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 18-23, cols = G-O)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows =18-23, cols =G-O)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", startRow = 18, cols =G-O)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", startRow = 18, cols =7-15)
x
View(x)
View(X)
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 15-20, cols = 7-15)
Datos
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 15-20, cols = 7-15, na.strings = "NA")
Datos <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 18-23, cols = 7-15)
X
View(teams)
View(X)
View(X)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- filter(X, row(15-20), cols(7-15))
dat <- filter(X, rows=15-20, cols=7-15)
dat <- filter(X, rows==15-20, cols==7-15)
at <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/AquisitionGas.xlsx")
dat <- read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx")
sum(dat$Zip*dat$Ext,na.rm=T)
dat <-read.xlsx ("./Pruebas Obtencion y limpieza de datos/Sem 1/DATA.gov_NGAP.xlsx", rows = 18-23, cols = 7-15)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
file="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc=xmlTreeParse(file, useInternalNodes = T)
doc=xmlTreeParse(file)
file="http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc=xmlTreeParse(file, useInternalNodes = T)
T=xmlRoot(doc)
xmlName(T)
names(T)
xmlSApply(T, xmlValue)
xmlSApply(T, 21231)
xpathSApply(T,"//zipcode" xmlValue)
xpathSApply(T,"//zipcode", xmlValue)
h<-xpathSApply(T,"//zipcode", xmlValue)
h$21231
h[21231]
h$"21231"
h[21231
''
h["21231"]
h<-xpathSApply(T,"//21235", xmlValue)
h<-xpathSApply(T,"//21231]", xmlValue)
h<-xpathSApply(T,"//21231", xmlValue)
h<-xpathSApply(T,"//zipcode[21231]", xmlValue)
h
h<-xpathSApply(T,"//zipcode[@21231]", xmlValue)
h<-xpathSApply(T,"zipcode[@21231]", xmlValue)
h<-xpathSApply(T,"zipcode[21231]", xmlValue)
h
View(h)
xpathSApply(T,"//zipcode", xmlValue)
h=xpathSApply(T,"//zipcode", xmlValue)
h
h=xpathSApply(T,"//zipcode[21231]", xmlValue)
View(h)
View(h)
View(h)
View(h)
View(h)
h=xpathSApply(T,"//zipcode[21231]", xmlValue)
h=xpathSApply(T,"//zipcode=21231]", xmlValue)
h=xpathSApply(T,"//zipcode[zipcode=21231]", xmlValue)
h
h=xpathSApply(T,zipcode[zipcode='21231'], xmlValue)
h=xpathSApply(T, "zipcode[zipcode='21231']", xmlValue)
h
h=xpathSApply(T,"//zipcode", xmlValue)
h=xpathSApply(T,"//zipcode=21231", xmlValue)
h
h=xpathSApply(T,"//zipcode[21231]", xmlValue)
h
h=xpathSApply(T,"//zipcode{21231}", xmlValue)
h=xpathSApply(T, "zipcode[zipcode='21231']", xmlValue)
h=xpathSApply(T,'<zipcode>21231</zipcode>', xmlValue)
h=xpathSApply(T,'/zipcode=21231', xmlValue)
h
h=xpathSApply(T,'//zipcode21231, xmlValue)
h=xpathSApply(T, "row[name='1912']", xmlValue)
h
h=xpathSApply(T, "//name[name='1912']", xmlValue)
h=xpathSApply(T, "//name['1912']", xmlValue)
h
h=xpathSApply(T, "//name['1919']", xmlValue)
h
h=xpathSApply(T, "//name['21231']", xmlValue)
h
h=xpathSApply(T, "//zipcode['21231']", xmlValue)
h=xpathSApply(T, "//zipcode['21231']", xmlValue)
h
structure(h)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileurl, destfile = "./Pruebas Obtencion y limpieza de datos/Sem 1/Surv.csv")
download.file(fileurl, destfile = "./Pruebas Obtencion y limpieza de datos/Sem 1/Surv.csv")
da=xmlSApply(T, function(21231) {
xmlSApply(21231, xmlValue)
})
da=xmlSApply(T, function(21231) {xmlSApply(21231, xmlValue)})
da <- xmlSApply(T, function(21231) {xmlSApply(21231, xmlValue)})
da <- xmlSApply (T, function(21231) {xmlSApply(21231, xmlValue)})
fread()
?fread
??fread
library(readr)
)
<string.h>
stdio.h
library(data.table)
detach("package:data.table", unload = TRUE)
library(data.table)
fread
gc()
?fread
DT<- fread("./Pruebas Obtencion y limpieza de datos/Sem 1/Surv.csv")
View(DT)
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
mean(DT$pwgtp15,by=DT$SEX)
time(sapply())
1=DT[,mean(pwgtp15),by=SEX]
1=DT[,mean(pwgtp15),by=SEX]
L=DT[,mean(pwgtp15),by=SEX]
time(L)
